<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rajat Singla</title>
    <description>Hi there, Welcome to rajat&#39;s blog. You will find blogs here on ror,emberjs,deployment ,some cool programming stuff and my new findings. Currently i am working on soldier2ndlife(a product of navyug) a portal for veterans to help them after putting down there uniforms.To get my attention send me a paradox. :)
</description>
    <link>http://rajatsingla.com/</link>
    <atom:link href="http://rajatsingla.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 03 Aug 2016 20:24:31 +0530</pubDate>
    <lastBuildDate>Wed, 03 Aug 2016 20:24:31 +0530</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Modules vs Classes in Ruby</title>
        <description>&lt;p&gt;A Module is a collection of methods and constants. The methods in a module may be instance methods or module methods. Instance methods appear as methods in a class when the module is included, module methods do not. Conversely, module methods may be called without creating an encapsulating object, while instance methods may not. (See Module#module_function.)&lt;/p&gt;

&lt;p&gt;In the descriptions that follow, the parameter sym refers to a symbol, which is either a quoted string or a Symbol (such as :name).&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Mod&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Math&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;CONST&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;meth&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#  ...&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class&lt;/span&gt;              &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; Module&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;constants&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [:CONST, :PI, :E]&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;instance_methods&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;#=&amp;gt; [:meth]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;constants → array
constants(inherited) → array
In the first form, returns an array of the names of all constants accessible from the point of call. This list includes the names of all modules and classes defined in the global scope.&lt;/p&gt;

&lt;p&gt;source:&lt;a&gt; http://ruby-doc.org/core-2.2.0/Module.html&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Jul 2016 12:41:55 +0530</pubDate>
        <link>http://rajatsingla.com/ruby/2016/07/28/module-vs-class.html</link>
        <guid isPermaLink="true">http://rajatsingla.com/ruby/2016/07/28/module-vs-class.html</guid>
        
        
        <category>ruby</category>
        
      </item>
    
  </channel>
</rss>
